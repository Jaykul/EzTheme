<Configuration>
    <ViewDefinitions>
        <View>
            <Name>PSReadLine-Preview</Name>
            <ViewSelectedBy>
                <TypeName>Selected.Microsoft.PowerShell.PSConsoleReadLineOptions</TypeName>
            </ViewSelectedBy>
            <CustomControl>
                <CustomEntries>
                    <CustomEntry>
                        <CustomItem>
                            <ExpressionBinding>
                                <ScriptBlock>
$Reset = $_.BackgroundColor + $_.DefaultTokenColor
"$($Reset + (" " * (80 - $_.ThemeName.Length - 4 )))`e[43;1m`e[30m[ $($_.ThemeName) ]`e[0m$($_.BackgroundColor)" + "`n" +
"$($_.BackgroundColor)$($_.KeywordColor)function$($Reset) $($_.DefaultTokenColor)Test-Syntax$($Reset) $($_.DefaultTokenColor){$($Reset)                                                          " + "`n" +
"    $($_.CommentColor)# Demo Syntax Highlighting$($Reset)                                                  " + "`n" +
"    $($_.DefaultTokenColor)[$($Reset)$($_.TypeColor)CmdletBinding$($Reset)$($_.DefaultTokenColor)()]$($Reset)                                                           " + "`n" +
"    $($_.KeywordColor)param$($Reset)$($_.DefaultTokenColor)([$($Reset)$($_.TypeColor)IO.FileInfo$($Reset)$($_.DefaultTokenColor)]$($Reset)$($_.VariableColor)`$Path$($Reset)$($_.DefaultTokenColor))$($Reset)                                                   " + "`n" +
"    $($_.KeywordColor)end$($Reset) $($_.DefaultTokenColor){$($Reset)                                                                       " + "`n" +
"        $($_.CommandColor)Write-Verbose$($Reset) $($_.StringColor)`"Testing in $($_.VariableColor)`$($($_.CommandColor)Split-Path$($Reset) $($_.VariableColor)`$PSScriptRoot$($Reset) $($_.ParameterColor)-Leaf$($Reset)$($_.VariableColor))$($Reset)$($_.StringColor)`"$($Reset) $($_.ParameterColor)-Verbose$($Reset)   " + "`n" +
"        $($_.VariableColor)`$Env:PSModulePath $($_.OperatorColor)-split $($_.StringColor)';' $($_.OperatorColor)-notcontains $($_.VariableColor)`$Path$($_.DefaultTokenColor).$($_.MemberColor)FullName $($_.DefaultTokenColor)|$($Reset)              " + "`n" +
"            $($_.CommandColor)Get-ChildItem$($Reset) $($_.DefaultTokenColor)|$($Reset) $($_.CommandColor)Select-Object$($Reset) $($_.ParameterColor)-First$($Reset) $($_.NumberColor)10$($Reset)                             " + "`n" +
"    $($_.DefaultTokenColor)}                                                                           " + "`n" +
"$($_.DefaultTokenColor)}$([char]27)[39m                                                                               " + "$([char]27)[0m`n"
                                </ScriptBlock>
                            </ExpressionBinding>
                        </CustomItem>
                    </CustomEntry>
                </CustomEntries>
            </CustomControl>
        </View>
        <View>
            <Name>PSReadLine-Theme</Name>
            <ViewSelectedBy>
                <TypeName>Selected.Microsoft.PowerShell.PSConsoleReadLineOptions</TypeName>
            </ViewSelectedBy>
            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <Label>CommandColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.CommandColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>CommentColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.CommentColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>ContinuationPromptColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ContinuationPromptColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>DefaultTokenColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.DefaultTokenColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>EmphasisColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.EmphasisColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>ErrorColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ErrorColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>KeywordColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.KeywordColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>MemberColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.MemberColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>NumberColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.NumberColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>OperatorColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.OperatorColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>ParameterColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ParameterColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>InlinePredictionColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.InlinePredictionColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>SelectionColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.SelectionColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>StringColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.StringColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>TypeColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.TypeColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>VariableColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.VariableColor)</ScriptBlock>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>
    </ViewDefinitions>
</Configuration>