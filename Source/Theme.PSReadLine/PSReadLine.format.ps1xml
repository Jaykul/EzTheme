<Configuration>
    <ViewDefinitions>
        <View>
            <Name>PSReadline-Preview</Name>
            <ViewSelectedBy>
                <TypeName>Selected.Microsoft.PowerShell.PSConsoleReadLineOptions</TypeName>
            </ViewSelectedBy>
            <CustomControl>
                <CustomEntries>
                    <CustomEntry>
                        <CustomItem>
                            <ExpressionBinding>
                                <ScriptBlock>
"$($_.BackgroundColor)$($_.KeywordColor)function $($_.DefaultTokenColor)Test-Syntax $($_.DefaultTokenColor){                                                          " + "`n" +
"    $($_.CommentColor)# Demo Syntax Highlighting                                                  " + "`n" +
"    $($_.DefaultTokenColor)[$($_.TypeColor)CmdletBinding$($_.DefaultTokenColor)()]                                                           " + "`n" +
"    $($_.KeywordColor)param$($_.DefaultTokenColor)([$($_.TypeColor)IO.FileInfo$($_.DefaultTokenColor)]$($_.VariableColor)`$Path$($_.DefaultTokenColor))                                                   " + "`n" +
"    $($_.KeywordColor)end $($_.DefaultTokenColor){                                                                       " + "`n" +
"        $($_.CommandColor)Write-Verbose $($_.StringColor)`"Testing in $($_.VariableColor)`$($($_.CommandColor)Split-Path $($_.VariableColor)`$PSScriptRoot $($_.ParameterColor)-Leaf$($_.VariableColor))$($_.StringColor)`" $($_.ParameterColor)-Verbose   " + "`n" +
"        $($_.VariableColor)`$Env:PSModulePath $($_.OperatorColor)-split $($_.StringColor)';' $($_.OperatorColor)-notcontains $($_.VariableColor)`$Path$($_.DefaultTokenColor).$($_.MemberColor)FullName                " + "`n" +
"    $($_.DefaultTokenColor)}                                                                           " + "`n" +
"$($_.DefaultTokenColor)}$([char]27)[39m                                                                               " + "$([char]27)[0m`n"
                                </ScriptBlock>
                            </ExpressionBinding>
                        </CustomItem>
                    </CustomEntry>
                </CustomEntries>
            </CustomControl>
        </View>
        <View>
            <Name>PSReadLine-Theme</Name>
            <ViewSelectedBy>
                <TypeName>Selected.Microsoft.PowerShell.PSConsoleReadLineOptions</TypeName>
            </ViewSelectedBy>
            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <Label>CommandColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.CommandColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>CommentColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.CommentColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>ContinuationPromptColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ContinuationPromptColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>DefaultTokenColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.DefaultTokenColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>EmphasisColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.EmphasisColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>ErrorColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ErrorColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>KeywordColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.KeywordColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>MemberColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.MemberColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>NumberColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.NumberColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>OperatorColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.OperatorColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>ParameterColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ParameterColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>PredictionColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.PredictionColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>SelectionColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.SelectionColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>StringColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.StringColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>TypeColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.TypeColor)</ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>VariableColor</Label>
                                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.VariableColor)</ScriptBlock>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>
    </ViewDefinitions>
</Configuration>